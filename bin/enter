#! /usr/bin/env node
const { Command } = require('commander');
// const program = new Command();
const { program } = require('commander');
const chalk = require("chalk");
var figlet = require("figlet");


// const program = require("commander");
// import select, { Separator } from '@inquirer/select';
// import inquirer from 'inquirer';
program.version(`icourt-cli ${require("../package.json").version}`);
const inquirer = require('inquirer');
// program.name("icourt-cli").usage(`icourt-cli v`).version(`1.0.0`);
program.name("icourt-cli").usage(`<command> [option]`);
program
  .command("create <project-name>") // 增加创建指令
  .description("create a new project") // 添加描述信息
  .option("-f, --force", "overwrite target directory if it exists") // 强制覆盖
  .action((projectName, cmd) => {
    // 处理用户输入create 指令附加的参数
    // console.log(projectName, cmd);
     // 引入 create 模块，并传入参数
     require("../lib/create")(projectName, cmd);
  });

  program
  .command("config [value]") // config 命令
  .description("inspect and modify the config")
  .option("-g, --get <key>", "get value by key")
  .option("-s, --set <key> <value>", "set option[key] is value")
  .option("-d, --delete <key>", "delete option by key")
  .action((value, keys) => {
    // value 可以取到 [value] 值，keys会获取到命令参数
    console.log(value, keys);
  });

// 监听 --help 指令
program.on("--help", function () {
    // 前后两个空行调整格式，更舒适
    console.log();
    console.log(
      " Run icourt-cli <command> --help for detailed usage of given command."
    );
    console.log();
  });
  





console.log(
  chalk.green(
    "Hello iCourter!" +"\n"+"Welcome to use" +
      chalk.blue.underline.bold("iCourt 技术中台 前端项目模版") +
      " enjoy it!"
  )
);



figlet("iCourt", function (err, data) {
    if (err) {
      console.log("Something went wrong...");
      console.dir(err);
      return;
    }
    console.log(data);
  });

//   const ora = require("ora");
// const spinner = ora('Loading1').start();

// setTimeout(() => {
// 	spinner.color = 'yellow';
// 	spinner.text = 'Loading rainbows22222 ';
// }, 2000);



// inquirer
//   .prompt([
//     {
//         name: "vue",
//         // 多选交互功能
//         // 单选将这里修改为 list 即可
//         type: "checkbox",
//         message: "Check the features needed for your project:",
//         choices: [
//           {
//             name: "Babel",
//             checked: true,
//           },
//           {
//             name: "TypeScript",
//           },
//           {
//             name: "Progressive Web App (PWA) Support",
//           },
//           {
//             name: "Router",
//           },
//         ],
//       },
//     /* Pass your questions in here */
//   ])
//   .then((answers) => {
//     console.log(data);
//     // Use user feedback for... whatever!!
//   })
//   .catch((error) => {
//     if (error.isTtyError) {
//       // Prompt couldn't be rendered in the current environment
//     } else {
//       // Something else went wrong
//     }
//   });

program.parse(process.argv);